<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Smart Attendance Dashboard</title>
  <style>
    :root {
      --primary: #007bff;
      --secondary: #6c757d;
      --success: #28a745;
      --warning: #ffc107;
      --danger: #dc3545;
      --light: #f8f9fa;
      --dark: #343a40;
    }
    * { margin: 0; padding: 0; box-sizing: border-box; font-family: "Poppins", sans-serif; }
    body { display: flex; height: 100vh; background-color: var(--light); overflow: hidden; }

    .sidebar {
      width: 250px; background: var(--primary); color: white;
      display: flex; flex-direction: column; padding: 20px;
    }
    .sidebar h2 { text-align: center; margin-bottom: 30px; }
    .sidebar a {
      color: white; text-decoration: none; padding: 12px 18px;
      border-radius: 6px; display: block; margin: 5px 0; transition: 0.3s;
    }
    .sidebar a:hover { background: rgba(255,255,255,0.2); }

    .main { flex: 1; overflow-y: auto; padding: 30px; }
    .header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; }
    .header h1 { color: var(--primary); }
    .header button {
      background: var(--primary); color: white; border: none;
      padding: 10px 18px; border-radius: 6px; cursor: pointer; transition: 0.3s;
    }
    .header button:hover { background: #0056b3; }

    .cards { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px; }
    .card {
      background: white; padding: 20px; border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1); text-align: center;
    }
    .card h3 { margin-bottom: 10px; color: var(--secondary); }
    .card p { font-size: 22px; font-weight: bold; color: var(--dark); }

    table {
      width: 100%; border-collapse: collapse; background: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1); border-radius: 10px; overflow: hidden; margin-bottom: 40px;
    }
    th, td { padding: 14px; border-bottom: 1px solid #ddd; text-align: center; }
    th { background: var(--primary); color: white; }
    tr:hover { background: #f1f1f1; }

    .attendance-count { font-weight: bold; font-size: 16px; }
    .count-good { color: var(--success); }
    .count-poor { color: var(--warning); }
    .count-critical { color: var(--danger); }

    .add-btn {
      position: fixed; bottom: 30px; right: 30px; background: var(--primary);
      color: white; border: none; padding: 15px 20px; border-radius: 50%;
      font-size: 22px; cursor: pointer; box-shadow: 0 4px 10px rgba(0,0,0,0.2);
      transition: 0.3s;
    }
    .add-btn:hover { background: #0056b3; }

    .modal {
      position: fixed; top: 0; left: 0; width: 100%; height: 100%;
      background: rgba(0,0,0,0.5); display: none; justify-content: center; align-items: center;
    }
    .modal-content {
      background: white; padding: 30px; border-radius: 8px;
      width: 400px; text-align: left; box-shadow: 0 4px 10px rgba(0,0,0,0.3);
    }
    .modal-content h2 { margin-bottom: 20px; color: var(--primary); }
    .modal-content input {
      width: 100%; padding: 10px; margin-bottom: 15px;
      border: 1px solid #ccc; border-radius: 6px;
    }
    .modal-content button {
      width: 100%; background: var(--primary); color: white;
      border: none; padding: 12px; border-radius: 6px; cursor: pointer; font-size: 16px;
    }
    .close { float: right; font-size: 20px; cursor: pointer; color: var(--danger); }
    .success, .error { text-align: center; margin-bottom: 10px; font-weight: bold; }
    .success { color: var(--success); }
    .error { color: var(--danger); }

    @media (max-width: 768px) {
      .sidebar { display: none; }
      .main { padding: 20px; }
      .add-btn { bottom: 20px; right: 20px; }
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <h2>Smart Attendance</h2>
    <a href="/">üè† Dashboard</a>
    <a href="/attendance-page">üìÖ View Attendance</a>
  </div>

  <div class="main">
    <div class="header">
      <h1>Dashboard</h1>
      <button id="refreshBtn">üîÑ Refresh</button>
    </div>

    <div class="cards">
      <div class="card">
        <h3>Today's Date</h3>
        <p><%= todayDate || new Date().toLocaleDateString() %></p>
      </div>
      <div class="card">
        <h3>Total Present Today</h3>
        <p><%= mergedRecords ? mergedRecords.filter(r => r.inTime !== '-').length : 0 %></p>
      </div>
      <div class="card">
        <h3>Registered Users</h3>
        <p><%= mergedRecords ? mergedRecords.length : 0 %></p>
      </div>
    </div>

    <h2>Today's Attendance</h2>
    <p>
    <% if (mergedRecords && mergedRecords.length > 0) { %>
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Card UID</th>
            <th>IN Time</th>
            <th>OUT Time</th>
            <th>Total Workdays (Last 7 Days)</th>
          </tr>
        </thead>
        <tbody>
          <% mergedRecords.forEach(r => { 
            let statusClass = 'count-critical';
            if (r.totalWorkdays >= 6) statusClass = 'count-good';
            else if (r.totalWorkdays >= 4) statusClass = 'count-poor';
          %>
          <tr>
            <td><%= r.name %></td>
            <td><%= r.cardUID %></td>
            <td><%= r.inTime %></td>
            <td><%= r.outTime %></td>
            <td><span class="attendance-count <%= statusClass %>"><%= r.totalWorkdays %> / 7</span></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    <% } else { %>
      <p>No attendance records found.</p>
    <% } %>
  </div>

  <button class="add-btn" id="openModal">Ôºã</button>

  <div class="modal" id="userModal">
    <div class="modal-content">
      <span class="close" id="closeModal">&times;</span>
      <h2>Register New User</h2>
      <div id="msg"></div>
      <input type="text" id="name" placeholder="Name (min 3 letters)" required />
      <input type="text" id="cardUID" placeholder="Card UID (5‚Äì16 chars)" required />
      <button id="registerBtn">Register</button>
    </div>
  </div>

  <script>
    const modal = document.getElementById('userModal');
    const openModal = document.getElementById('openModal');
    const closeModal = document.getElementById('closeModal');
    const msg = document.getElementById('msg');
    const registerBtn = document.getElementById('registerBtn');
    const refreshBtn = document.getElementById('refreshBtn');

    openModal.addEventListener('click', () => modal.style.display = 'flex');
    closeModal.addEventListener('click', () => modal.style.display = 'none');
    window.addEventListener('click', e => { if (e.target === modal) modal.style.display = 'none'; });

    registerBtn.addEventListener('click', async () => {
      msg.textContent = '';
      const name = document.getElementById('name').value.trim();
      const cardUID = document.getElementById('cardUID').value.trim();
      if (name.length < 3) { msg.innerHTML = '<div class="error">Name must be at least 3 letters.</div>'; return; }
      if (cardUID.length < 5 || cardUID.length > 16) { msg.innerHTML = '<div class="error">Card UID must be between 5‚Äì16 characters.</div>'; return; }

      try {
        const res = await fetch('/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, cardUID })
        });
        const data = await res.json();
        if (res.ok) {
          msg.innerHTML = `<div class="success">‚úÖ ${data.user.name} registered successfully!</div>`;
          setTimeout(() => location.reload(), 1500);
        } else msg.innerHTML = `<div class="error">${data.error || 'Error registering user.'}</div>`;
      } catch (err) {
        msg.innerHTML = '<div class="error">Server error. Try again later.</div>';
      }
    });

    refreshBtn.addEventListener('click', () => location.reload());
  </script>
</body>
</html>
